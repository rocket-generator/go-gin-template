package handlers

import (
	"net/http"

	"github.com/gin-gonic/gin"
{{- if ne .RequestSchemaName.Original "" }}
	"{{ .OrganizationName }}/internal/http/app/requests"
{{- end }}
	"{{ .OrganizationName }}/internal/http/app/responses"
)

// {{ .PathName.Default.Title }}{{ .Method.Title }} ... endpoint for {{ .Method.Original }} {{ .Path }}
func (handler *Handler) {{ .PathName.Default.Title }}{{ .Method.Title }}(ctx *gin.Context) {
{{- range .Parameters }}
{{- if eq .In "path" }}
    _ = ctx.Param("{{ .Name.Original }}")
{{- else if eq .In "query" }}
    _ = ctx.DefaultQuery("{{ .Name.Original }}","")
{{- end }}
{{ end }}
{{- if ne .RequestSchemaName.Original "" }}
	var update requests.{{ .RequestSchemaName.Default.Title }}
	if err := c.ShouldBindJSON(&update); err != nil {
		ctx.JSON(http.StatusInternalServerError, responses.NewInvalidParameterErrorStatus(err))
		return
	}
{{ end }}

{{- range .Responses -}}
{{- if eq .Success true }}
    response := responses.{{ .Schema.Name.Default.Title }}{}
    ctx.JSON(http.StatusOK, response)
{{- end -}}
{{- end }}
}
